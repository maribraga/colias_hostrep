---
title: "Colias diversification with RPanda"
author: "Mariana P Braga"
date: last-modified
date-format: long
format: 
  html:
    code-fold: show
    code-summary: "Show the code"
execute: 
  warning: false
editor: source
editor_options: 
  chunk_output_type: console
---

## Diversification rate shifts in Colias

Packages

```{r}
#| label: "packages"
#| message: FALSE

# install branch from RPanda repo
#install_github("hmorlon/PANDA", ref = "clade.shift.model")

# load packages
library(ape)
library(RPANDA)
library(here)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(coda)
library(treebalance)
library(phytools)
```

Load the data

```{r}

tree <- read.tree(here("data_prepare/data/processed/Colias_full_tree_clean.tre"))
groups <- read.csv(here("data_prepare/data/processed/groups.csv"))
```

Shift combinations

```{r}
sfrac <- get.sampling.fractions(tree, groups, plot = TRUE, cex = 0.5, clade.size = 5)
node_comb <- get.comb.shift(tree, groups, sfrac, clade.size = 5)
```

Find best combination of models

```{r}
#| fig-height: 10
#| fig-width: 7
#| 
shifts <- shift.estimates(phylo = tree,
                          data = groups,
                          sampling.fractions = sfrac,
                          comb.shift = node_comb,
                          models = c("BCST","BVAR",
                                     "BCST_DCST","BVAR_DVAR",
                                     "BVAR_DCST","BCST_DVAR"),
                          backbone.option = "crown.shift",
                          multi.backbone = "all",
                          Ncores = 4)

#str(shifts, max.level = 1)
head(shifts$total)

par(mfrow=c(2,3))
for(i in 1:6){
  plot.phylo.comb(phylo = tree, data = groups, sampling.fractions = sfrac, shift.res = shifts, 
                combi = i, label.offset = 0.1, cex = 0.7, lad = F) 
}

shifts$backbones$`75/`[[1]][1:3,]
shifts$subclades$'75'[1:3,]
shifts$subclades$'117'[1:3,]

```

Rates and diversity across time

```{r}
crown_age <- max(node.depth.edgelength(tree))
time <- -c(crown_age, seq(floor(crown_age), 0, by = -0.1))

rates <- div.rates(phylo = tree,
                   shift.res = shifts,
                   time.interval = 0.1,
                   combi = 1, 
                   part = "all")


paleodiversity <- paleodiv(phylo = tree,
                           data = groups,
                           sampling.fractions = sfrac,
                           time.interval = 0.1,
                           shift.res = shifts,
                           split.div = TRUE,
                           combi = 1)

df_paleo <- as.data.frame(paleodiversity) %>% 
  t() %>% 
  as_tibble() %>% 
  mutate(time = time, .before = 1) %>% 
  rename(Northern_hemisphere = '75', Neotropics = 'backbone') %>% 
  pivot_longer(2:3, names_to = "clade", values_to = "richness") %>% 
  mutate(Clade = factor(clade, levels = c("Northern_hemisphere", "Neotropics")))
```

Plot shifts, diversification rates and paleodiversity over time

```{r}
#| label: "big plot"
#| fig-height: 10
#| fig-width: 10

group_colors <- c("#6E4672", "#FF8C01")

# Phylogeny with shifts 
plot.phylo.comb(phylo = tree, data = groups, sampling.fractions = sfrac, shift.res = shifts, combi = 1, label.offset = 0.1, cex = 0.7, lad = F,
                col.sub = group_colors[1], col.bck = group_colors[2], edge.width = 2) 
axisPhylo() 
mtext("Time (Ma)", side = 1, line = 2, cex = 1, at = 1.75)
p1 <- recordPlot()

# Rates through time 
plot(time, rates[[2]][1,], type = "l", ylim = c(0, 5.5), col = group_colors[2], las = 1, xlab = "Time (Myrs)", 
     ylab = "Rates (Events/ Lineages / Myr)", main = "Diversification rates per clade")
lines(time, rates[[1]][1,], col = group_colors[1]) 
p2 <- recordPlot()

# Paleodiversity dynamics 
paleo_plot <- ggplot(df_paleo, aes(time, richness, fill = Clade, col = Clade)) + 
  geom_area(alpha = 0.5) +
  scale_fill_manual(values = group_colors) +
  scale_color_manual(values = group_colors) +
  labs(y = "Number of species", x = "Time (Ma)") +
  theme_bw() +
  theme(legend.position = "bottom")

p3 <- plot_grid(p2, paleo_plot, nrow = 2)
p4 <- plot_grid(p1, p3, ncol = 2)
p4

```


## Model adequacy

To test whether the selected model is adequate, we can simulate data with that model and then compare them to the empirical data. If the model is adequate, it will produce data similar to the observed empirical data.

```{r}
#| label: "adequacy"

posterior_trees <- simul.comb.shift(phylo = tree, sampling.fractions = sfrac, shift.res = shifts, 
                                           clade.size = 5, combi = 1, n = 10000)

# Number of tips per group
ntip_by_groups <- lapply(posterior_trees, function(x)     
  table(sapply(strsplit(x$tip.label, split = ""), "[[", 1))) 
ntip_by_groups_df <- as.data.frame(do.call(rbind, ntip_by_groups)) 
ntip_by_groups_colias <- c(73,7)

par(mfrow = c(1,2), cex = 0.6) 
boxplot(ntip_by_groups_df, las = 1, main = "Species richness by group", ylab = "Number of species", xlab = "Groups") 
points(c(1:2), ntip_by_groups_colias, pch = 19, col = "red") 
legend("toprigh", bty = "n", legend = "Empirical values", pch = 19, col = "red", cex = 1)

median(ntip_by_groups_df$a)
median(ntip_by_groups_df$z)

divA <- as.mcmc(ntip_by_groups_df$a)
divZ <- as.mcmc(ntip_by_groups_df$z)

HPDinterval(divA)
HPDinterval(divZ)

# Tree imbalance


avgLeafDepI <- avgLeafDepI(tree) 
avgLeafDepI_posteriors <- sapply(posterior_trees, avgLeafDepI) 
hist(avgLeafDepI_posteriors, 
     main = "Distribution of average leaf depth index",
     xlab = "Average leaf depth", las = 1) 
abline(v = avgLeafDepI, col = "red")
dev.off()
```

```{r}
# LTT 
ltt_colias <- ltt(tree, plot = F) 
ltt_colias_df <- data.frame(times = round(ltt_colias$times, 4), ltt = ltt_colias$ltt)

posterior_trees_mp <- as.multiPhylo(posterior_trees[[1]]) 

for(i in 2:length(posterior_trees)){ 
  posterior_trees_mp[[i]] <- posterior_trees[[i]] 
} 

ltt95_CI <- ltt95(posterior_trees_mp, log = T, las = 1) 
lines(ltt_colias_df$times, ltt_colias_df$ltt, type = "s", col = "red") 
mtext(text = "Colias", side = 3, line = 1)

ltt95_CI_df <- as.data.frame(ltt95_CI[,c("time", "low(lineages)", "high(lineages)")])

ltt95_CI_df$time <- round(ltt95_CI_df$time, 4)

points_in_colias <- c() 
for(i in 1:nrow(ltt_colias_df)){
  int_max <- sort(ltt95_CI_df$time[ ltt95_CI_df$time >= ltt_colias_df$times[i]][1]) 
  int_min <- sort(ltt95_CI_df$time[ltt95_CI_df$time <= ltt_colias_df$times[i]],
                  decreasing = T)[1] 
  ltt_min <- ltt95_CI_df$`low(lineages)`[ltt95_CI_df$time == int_min] 
  ltt_max <- ltt95_CI_df$`high(lineages)`[ltt95_CI_df$time == int_max]
  points_in_colias[i] <- ifelse(ltt_min <= ltt_colias_df$ltt[i] & 
                                   ltt_colias_df$ltt[i] <= ltt_max, T, F)
} 

legend("topleft", legend = c("95% of the distribution of simulated trees around the median", "Median of simulated trees", "Empirical data"), lty = c(3,1,1), lwd = c(1,2,1), col = c("black","black","red"), bty = "n", cex = 0.8)

sum(points_in_colias)/length(points_in_colias)
```


